<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
<!--    放行-->
    <http pattern="/favicon.ico" security="none"/>

    <http use-expressions="false" entry-point-ref="casAuthenticationEntryPoint">
        <intercept-url pattern="/**" access="ROLE_ADMIN"/>
<!--        登录框-->
        <form-login/>
      <!--退出登录-->
        <logout/>
<!--        注册cas认证过滤器-->
        <custom-filter ref="casAuthenticationFilter" position="CAS_FILTER"/>
<!--        注册退出登录销毁session过滤器-->
        <custom-filter ref="singleSignOutFilter" before="CAS_FILTER"/>
<!--        注册退出登录过滤器-->
        <custom-filter ref="logoutFilter" before="LOGOUT_FILTER"/>
    </http>
<!--    springsecurity整合入口-->
    <beans:bean id="casAuthenticationEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
<!--        配置cas service登录地址-->
        <beans:property name="loginUrl" value="http://192.168.188.128:9100/cas/login"/>
<!--        配置客户端地址-->
        <beans:property name="serviceProperties" ref="serviceProperties"/>
     </beans:bean>
<!--    创建一个客户端对象-->
    <beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
        <beans:property name="service" value="http://localhost:9003/login/cas"/>
    </beans:bean>
<!-- 配置cas认证管理器 接管springsecurity的认证管理器 -->
    <beans:bean id="casAuthenticationFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
<!--        接管认证管理器 springsecurity的authentication-manager -->
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="casAuthenticationProvider" />
<!--            <user-service>-->
<!--                <user name="admin" password="123" authorities="ROLE_ADMIN" />-->
<!--            </user-service>-->
    </authentication-manager>
<!--    创建cas和springSecurity联合处理类-->
    <beans:bean id="casAuthenticationProvider"  class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
<!--        1:票据验证工作,让cas service完成-->
        <beans:property name="ticketValidator">
            <!--配置cas server对象-->
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="http://192.168.188.128:9100/cas"/>
            </beans:bean>
        </beans:property>
<!--       2: 配置springsecurity进行授权-->
        <beans:property name="authenticationUserDetailsService">
            <beans:bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
<!--                注入用户自己编写的自定义认证类-->
                <beans:constructor-arg ref="userDetaikService"/>
            </beans:bean>
        </beans:property>
<!--        3:客户端属性-->
        <beans:property name="serviceProperties" ref="serviceProperties"/>
<!--        4:key的生成方式-->
        <beans:property name="key"  value="an_id_for_this_auth_provider_only"/>
    </beans:bean>
<!--    声明自定义认证类-->
    <beans:bean id="userDetaikService" class="com.offcn.user.UserDetaikServiceImpl"/>
    <!--单点登录退出，负责销毁session的过滤器-->
    <beans:bean id="singleSignOutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
    <!--配置退出springsecurity和cas的统一退出登录过滤-->
    <beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <!--配置退出登录要触发cas server的地址-->
        <beans:constructor-arg value="http://192.168.188.128:9100/cas/logout?service=http://www.youjiuye.com"/>
        <!--配置退出springsecurity-->
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </beans:constructor-arg>
        <!--配置实际退出地址-->
        <beans:property name="filterProcessesUrl" value="/logout/cas"/>
    </beans:bean>
</beans:beans>